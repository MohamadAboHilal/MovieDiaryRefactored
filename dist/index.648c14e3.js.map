{"mappings":"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","sources":["<anon>","src/mohamad/app.js","src/mohamad/ui.js","src/mohamad/network.js","src/mohamad/localstorage.js"],"sourcesContent":["function $e4f72e471347380b$export$ebf385e3d0935cd(carouselWrapper, movies) {\n    movies.forEach((movie, index)=>{\n        const carouselElement = document.createElement(\"div\");\n        index === 0 ? carouselElement.classList.add(\"duration-700\", \"ease-in-out\") : carouselElement.classList.add(\"hidden\");\n        carouselElement.setAttribute(\"data-carousel-item\", \"\");\n        const carouselImage = document.createElement(\"img\");\n        carouselImage.src = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\n        carouselImage.classList.add(\"absolute\", \"block\", \"w-full\", \"h-full\", \"object-cover\", \"top-0\", \"left-0\");\n        carouselImage.alt = \"...\";\n        carouselElement.appendChild(carouselImage);\n        carouselWrapper.appendChild(carouselElement);\n    });\n}\nfunction $e4f72e471347380b$export$fa42cedcd99cef2f(movieGrid, movies, addToFavorites, fetchMovieDetails) {\n    movies.forEach((movie)=>{\n        const movieElement = document.createElement(\"div\");\n        movieElement.classList.add(\"bg-[#22252E]\", \"rounded-lg\", \"shadow-lg\", \"overflow-hidden\", \"relative\", \"flex\", \"flex-col\", \"transition\", \"transform\", \"hover:scale-105\", \"hover:shadow-2xl\", \"m-[20px]\", \"mb-[20px]\");\n        const movieImage = document.createElement(\"img\");\n        movieImage.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        movieImage.classList.add(\"w-full\", \"h-64\", \"object-cover\");\n        movieElement.appendChild(movieImage);\n        const movieInfo = document.createElement(\"div\");\n        movieInfo.classList.add(\"p-4\", \"flex-grow\", \"flex\", \"flex-col\", \"justify-between\");\n        const movieTitle = document.createElement(\"h3\");\n        movieTitle.textContent = movie.title;\n        movieTitle.classList.add(\"text-lg\", \"font-semibold\", \"mb-2\", \"text-white\");\n        movieInfo.appendChild(movieTitle);\n        const movieRating = document.createElement(\"p\");\n        movieRating.textContent = `Rating: ${movie.vote_average}`;\n        movieRating.classList.add(\"text-white\", \"mb-2\");\n        movieInfo.appendChild(movieRating);\n        fetchMovieDetails(movie.id).then((details)=>{\n            const movieLength = document.createElement(\"p\");\n            movieLength.textContent = `Length: ${details.runtime} mins`;\n            movieLength.classList.add(\"text-white\", \"mb-2\");\n            movieInfo.appendChild(movieLength);\n        });\n        movieElement.appendChild(movieInfo);\n        const favBtnContainer = document.createElement(\"div\");\n        favBtnContainer.classList.add(\"absolute\", \"bottom-3\", \"right-2\");\n        const favBtn = document.createElement(\"button\");\n        favBtn.innerHTML = '<i class=\"fas fa-heart\"></i>';\n        favBtn.classList.add(\"text-white\", \"hover:text-red-500\", \"transition\");\n        if (addToFavorites.isFavorite(movie.id)) favBtn.classList.add(\"text-red-500\");\n        favBtn.addEventListener(\"click\", ()=>addToFavorites.toggle(movie, favBtn));\n        favBtnContainer.appendChild(favBtn);\n        movieElement.appendChild(favBtnContainer);\n        movieGrid.appendChild(movieElement);\n    });\n}\n\n\nasync function $72b235940e08438d$export$225b489b0d997c20(url, options) {\n    const response = await fetch(url, options);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    const data = await response.json();\n    return data.results;\n}\nasync function $72b235940e08438d$export$a199ce1860fbd5cd(movieId, options) {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?language=en-US`, options);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    return await response.json();\n}\n\n\nconst $eddd7fbb5783a222$export$befc58f62c2aa0b1 = {\n    getFavorites: ()=>JSON.parse(localStorage.getItem(\"favorites\")) || [],\n    isFavorite: (movieId)=>{\n        const favorites = $eddd7fbb5783a222$export$befc58f62c2aa0b1.getFavorites();\n        return favorites.some((fav)=>fav.id === movieId);\n    },\n    addFavorite: (movie)=>{\n        const favorites = $eddd7fbb5783a222$export$befc58f62c2aa0b1.getFavorites();\n        favorites.push(movie);\n        localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    },\n    removeFavorite: (movieId)=>{\n        const favorites = $eddd7fbb5783a222$export$befc58f62c2aa0b1.getFavorites();\n        const updatedFavorites = favorites.filter((fav)=>fav.id !== movieId);\n        localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n    },\n    toggle: (movie, button)=>{\n        if ($eddd7fbb5783a222$export$befc58f62c2aa0b1.isFavorite(movie.id)) {\n            $eddd7fbb5783a222$export$befc58f62c2aa0b1.removeFavorite(movie.id);\n            button.classList.remove(\"text-red-500\");\n            button.classList.add(\"text-white\");\n        } else {\n            $eddd7fbb5783a222$export$befc58f62c2aa0b1.addFavorite(movie);\n            button.classList.remove(\"text-white\");\n            button.classList.add(\"text-red-500\");\n        }\n    }\n};\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const carouselWrapper = document.getElementById(\"carousel-wrapper\");\n    const movieGrid = document.getElementById(\"movie-grid\");\n    const url = \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\";\n    const options = {\n        method: \"GET\",\n        headers: {\n            accept: \"application/json\",\n            Authorization: \"Bearer YOUR_API_KEY\"\n        }\n    };\n    const showItem = (index)=>{\n        const carouselItems = carouselWrapper.querySelectorAll(\"[data-carousel-item]\");\n        carouselItems.forEach((item, i)=>{\n            item.classList.toggle(\"hidden\", i !== index);\n        });\n    };\n    let currentIndex = 0;\n    document.getElementById(\"carousel-prev\").addEventListener(\"click\", ()=>{\n        currentIndex = currentIndex > 0 ? currentIndex - 1 : carouselWrapper.children.length - 1;\n        showItem(currentIndex);\n    });\n    document.getElementById(\"carousel-next\").addEventListener(\"click\", ()=>{\n        currentIndex = currentIndex < carouselWrapper.children.length - 1 ? currentIndex + 1 : 0;\n        showItem(currentIndex);\n    });\n    (0, $72b235940e08438d$export$225b489b0d997c20)(url, options).then((movies)=>{\n        const carouselMovies = movies.slice(0, 5);\n        (0, $e4f72e471347380b$export$ebf385e3d0935cd)(carouselWrapper, carouselMovies);\n        (0, $e4f72e471347380b$export$fa42cedcd99cef2f)(movieGrid, movies, (0, $eddd7fbb5783a222$export$befc58f62c2aa0b1), (id)=>(0, $72b235940e08438d$export$a199ce1860fbd5cd)(id, options));\n    }).catch((error)=>{\n        console.error(\"Error fetching popular movies:\", error);\n    });\n});\n\n\n//# sourceMappingURL=index.648c14e3.js.map\n","import { updateCarousel, populateMovieGrid } from \"./ui.js\";\r\nimport { fetchPopularMovies, fetchMovieDetails } from \"./network.js\";\r\nimport { favoritesManager } from \"./localstorage.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const carouselWrapper = document.getElementById(\"carousel-wrapper\");\r\n  const movieGrid = document.getElementById(\"movie-grid\");\r\n\r\n  const url =\r\n    \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\";\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      Authorization: \"Bearer YOUR_API_KEY\",\r\n    },\r\n  };\r\n\r\n  const showItem = (index) => {\r\n    const carouselItems = carouselWrapper.querySelectorAll(\r\n      \"[data-carousel-item]\"\r\n    );\r\n    carouselItems.forEach((item, i) => {\r\n      item.classList.toggle(\"hidden\", i !== index);\r\n    });\r\n  };\r\n\r\n  let currentIndex = 0;\r\n\r\n  document.getElementById(\"carousel-prev\").addEventListener(\"click\", () => {\r\n    currentIndex =\r\n      currentIndex > 0 ? currentIndex - 1 : carouselWrapper.children.length - 1;\r\n    showItem(currentIndex);\r\n  });\r\n\r\n  document.getElementById(\"carousel-next\").addEventListener(\"click\", () => {\r\n    currentIndex =\r\n      currentIndex < carouselWrapper.children.length - 1 ? currentIndex + 1 : 0;\r\n    showItem(currentIndex);\r\n  });\r\n\r\n  fetchPopularMovies(url, options)\r\n    .then((movies) => {\r\n      const carouselMovies = movies.slice(0, 5);\r\n      updateCarousel(carouselWrapper, carouselMovies);\r\n      populateMovieGrid(movieGrid, movies, favoritesManager, (id) =>\r\n        fetchMovieDetails(id, options)\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching popular movies:\", error);\r\n    });\r\n});\r\n","export function updateCarousel(carouselWrapper, movies) {\r\n  movies.forEach((movie, index) => {\r\n    const carouselElement = document.createElement(\"div\");\r\n    index === 0\r\n      ? carouselElement.classList.add(\"duration-700\", \"ease-in-out\")\r\n      : carouselElement.classList.add(\"hidden\");\r\n    carouselElement.setAttribute(\"data-carousel-item\", \"\");\r\n\r\n    const carouselImage = document.createElement(\"img\");\r\n    carouselImage.src = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\r\n    carouselImage.classList.add(\r\n      \"absolute\",\r\n      \"block\",\r\n      \"w-full\",\r\n      \"h-full\",\r\n      \"object-cover\",\r\n      \"top-0\",\r\n      \"left-0\"\r\n    );\r\n    carouselImage.alt = \"...\";\r\n\r\n    carouselElement.appendChild(carouselImage);\r\n    carouselWrapper.appendChild(carouselElement);\r\n  });\r\n}\r\n\r\nexport function populateMovieGrid(\r\n  movieGrid,\r\n  movies,\r\n  addToFavorites,\r\n  fetchMovieDetails\r\n) {\r\n  movies.forEach((movie) => {\r\n    const movieElement = document.createElement(\"div\");\r\n    movieElement.classList.add(\r\n      \"bg-[#22252E]\",\r\n      \"rounded-lg\",\r\n      \"shadow-lg\",\r\n      \"overflow-hidden\",\r\n      \"relative\",\r\n      \"flex\",\r\n      \"flex-col\",\r\n      \"transition\",\r\n      \"transform\",\r\n      \"hover:scale-105\",\r\n      \"hover:shadow-2xl\",\r\n      \"m-[20px]\",\r\n      \"mb-[20px]\"\r\n    );\r\n\r\n    const movieImage = document.createElement(\"img\");\r\n    movieImage.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n    movieImage.classList.add(\"w-full\", \"h-64\", \"object-cover\");\r\n    movieElement.appendChild(movieImage);\r\n\r\n    const movieInfo = document.createElement(\"div\");\r\n    movieInfo.classList.add(\r\n      \"p-4\",\r\n      \"flex-grow\",\r\n      \"flex\",\r\n      \"flex-col\",\r\n      \"justify-between\"\r\n    );\r\n\r\n    const movieTitle = document.createElement(\"h3\");\r\n    movieTitle.textContent = movie.title;\r\n    movieTitle.classList.add(\"text-lg\", \"font-semibold\", \"mb-2\", \"text-white\");\r\n    movieInfo.appendChild(movieTitle);\r\n\r\n    const movieRating = document.createElement(\"p\");\r\n    movieRating.textContent = `Rating: ${movie.vote_average}`;\r\n    movieRating.classList.add(\"text-white\", \"mb-2\");\r\n    movieInfo.appendChild(movieRating);\r\n\r\n    fetchMovieDetails(movie.id).then((details) => {\r\n      const movieLength = document.createElement(\"p\");\r\n      movieLength.textContent = `Length: ${details.runtime} mins`;\r\n      movieLength.classList.add(\"text-white\", \"mb-2\");\r\n      movieInfo.appendChild(movieLength);\r\n    });\r\n\r\n    movieElement.appendChild(movieInfo);\r\n\r\n    const favBtnContainer = document.createElement(\"div\");\r\n    favBtnContainer.classList.add(\"absolute\", \"bottom-3\", \"right-2\");\r\n\r\n    const favBtn = document.createElement(\"button\");\r\n    favBtn.innerHTML = '<i class=\"fas fa-heart\"></i>';\r\n    favBtn.classList.add(\"text-white\", \"hover:text-red-500\", \"transition\");\r\n\r\n    if (addToFavorites.isFavorite(movie.id)) {\r\n      favBtn.classList.add(\"text-red-500\");\r\n    }\r\n\r\n    favBtn.addEventListener(\"click\", () =>\r\n      addToFavorites.toggle(movie, favBtn)\r\n    );\r\n\r\n    favBtnContainer.appendChild(favBtn);\r\n    movieElement.appendChild(favBtnContainer);\r\n\r\n    movieGrid.appendChild(movieElement);\r\n  });\r\n}\r\n","export async function fetchPopularMovies(url, options) {\r\n  const response = await fetch(url, options);\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n  const data = await response.json();\r\n  return data.results;\r\n}\r\n\r\nexport async function fetchMovieDetails(movieId, options) {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\r\n    options\r\n  );\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n  return await response.json();\r\n}\r\n","export const favoritesManager = {\r\n  getFavorites: () => JSON.parse(localStorage.getItem(\"favorites\")) || [],\r\n\r\n  isFavorite: (movieId) => {\r\n    const favorites = favoritesManager.getFavorites();\r\n    return favorites.some((fav) => fav.id === movieId);\r\n  },\r\n\r\n  addFavorite: (movie) => {\r\n    const favorites = favoritesManager.getFavorites();\r\n    favorites.push(movie);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  },\r\n\r\n  removeFavorite: (movieId) => {\r\n    const favorites = favoritesManager.getFavorites();\r\n    const updatedFavorites = favorites.filter((fav) => fav.id !== movieId);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\r\n  },\r\n\r\n  toggle: (movie, button) => {\r\n    if (favoritesManager.isFavorite(movie.id)) {\r\n      favoritesManager.removeFavorite(movie.id);\r\n      button.classList.remove(\"text-red-500\");\r\n      button.classList.add(\"text-white\");\r\n    } else {\r\n      favoritesManager.addFavorite(movie);\r\n      button.classList.remove(\"text-white\");\r\n      button.classList.add(\"text-red-500\");\r\n    }\r\n  },\r\n};\r\n"],"names":["$72b235940e08438d$export$225b489b0d997c20","url","options","response","fetch","ok","Error","status","data","json","results","$72b235940e08438d$export$a199ce1860fbd5cd","movieId","$eddd7fbb5783a222$export$befc58f62c2aa0b1","getFavorites","JSON","parse","localStorage","getItem","isFavorite","favorites","some","fav","id","addFavorite","movie","push","setItem","stringify","removeFavorite","updatedFavorites","filter","toggle","button","classList","remove","add","document","addEventListener","carouselWrapper","getElementById","movieGrid","method","headers","accept","Authorization","showItem","index","carouselItems","querySelectorAll","forEach","item","i","currentIndex","children","length","then","movies","carouselElement","createElement","setAttribute","carouselImage","src","backdrop_path","alt","appendChild","slice","addToFavorites","fetchMovieDetails","movieElement","movieImage","poster_path","movieInfo","movieTitle","textContent","title","movieRating","vote_average","details","movieLength","runtime","favBtnContainer","favBtn","innerHTML","catch","error","console"],"version":3,"file":"index.648c14e3.js.map"}
{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAgB,SAAS,cAAc,CAAC,kBAG9C,SAAS,IACP,OAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAiB,EAAE,AAE5D,CAwFA,SAAS,EAAW,CAAO,EAEzB,OAAO,AADW,IACD,IAAI,CAAC,AAAC,GAAQ,EAAI,EAAE,GAAK,EAC5C,CAsBA,SAAS,EAAgB,CAAO,EAE9B,MAAO,AADO,CAAA,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,gBAAkB,CAAC,CAAA,CACrD,CAAC,EAAQ,AACvB,CA6DA,AADkB,IACR,OAAO,CAAC,AAAC,GAAU,AA9K7B,CAAA,SAAyB,CAAK,EAC5B,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAChB,cACA,aACA,YACA,kBACA,WACA,OACA,WACA,SACA,WACA,aAEF,EAAK,YAAY,CAAC,gBAAiB,EAAM,EAAE,EAE3C,IAAM,EAAa,SAAS,aAAa,CAAC,MAC1C,CAAA,EAAW,GAAG,CAAG,CAAC,+BAA+B,EAAE,EAAM,WAAW,CAAA,CAAE,CACtE,EAAW,GAAG,CAAG,EAAM,KAAK,CAC5B,EAAW,SAAS,CAAC,GAAG,CAAC,SAAU,OAAQ,gBAC3C,EAAK,WAAW,CAAC,GAEjB,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,SAAS,CAAC,GAAG,CAAC,MAAO,OAAQ,WAAY,aAEnD,IAAM,EAAa,SAAS,aAAa,CAAC,KAC1C,CAAA,EAAW,WAAW,CAAG,EAAM,KAAK,CACpC,EAAW,SAAS,CAAC,GAAG,CAAC,UAAW,gBAAiB,OAAQ,cAC7D,EAAU,WAAW,CAAC,GAEtB,IAAM,EAAc,SAAS,aAAa,CAAC,IAC3C,CAAA,EAAY,WAAW,CAAG,CAAC,QAAQ,EAAE,EAAM,YAAY,CAAA,CAAE,CACzD,EAAY,SAAS,CAAC,GAAG,CAAC,gBAAiB,QAC3C,EAAU,WAAW,CAAC,GAGtB,IAAM,EAAS,SAAS,aAAa,CAAC,UACtC,EAAO,SAAS,CAAC,GAAG,CAClB,WACA,QACA,UACA,gBACA,qBACA,cAEF,EAAO,SAAS,CAAG,+BACf,EAAW,EAAM,EAAE,GACrB,EAAO,SAAS,CAAC,GAAG,CAAC,gBAGvB,EAAO,gBAAgB,CAAC,QAAS,SA0C7B,EAAA,EAAY,IAEZ,EAAW,AA3CE,EA2CI,EAAE,GAErB,EAAY,EAAU,MAAM,CAAC,AAAC,GAAQ,EAAI,EAAE,GAAK,AA7ClC,EA6CwC,EAAE,EACzD,AA9CsB,EA8Cf,SAAS,CAAC,MAAM,CAAC,gBACxB,AAgFN,SAAyB,CAAO,EAC9B,IAAM,EAAO,SAAS,aAAa,CAAC,CAAC,gBAAgB,EAAE,EAAQ,EAAE,CAAC,EAC9D,GACF,EAAK,MAAM,EAEf,EArFsB,AA/CD,EA+CO,EAAE,IAGxB,EAAU,IAAI,CAlDC,GAmDf,AAnDsB,EAmDf,SAAS,CAAC,GAAG,CAAC,iBAIvB,aAAa,OAAO,CAAC,YAAa,KAAK,SAAS,CAAC,GAtDjD,GAEA,EAAK,WAAW,CAAC,GAGjB,IAAM,EAAU,SAAS,aAAa,CAAC,UACvC,EAAQ,SAAS,CAAC,GAAG,CACnB,UACA,cACA,aACA,OACA,OACA,aACA,aACA,cAEF,IAAM,EAAO,EAAgB,EAAM,EAAE,CACrC,CAAA,EAAQ,WAAW,CAAG,EAAO,YAAc,cAC3C,EAAQ,gBAAgB,CAAC,QAAS,KAChC,AA6CJ,CAAA,SAAyB,CAAO,CAAE,CAAO,EACvC,IAAM,EAAe,EAAgB,GAE/B,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,SAAS,CAAC,GAAG,CACrB,QACA,QACA,SACA,SACA,SACA,cACA,gBACA,OACA,iBACA,gBAEF,EAAU,SAAS,CAAG;A;A;AAGqG,+HAAA,EAC/G,GAAgB,GACjB;A;A;A;AAIT,MAAA,CAAC,CAEH,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,SAAS,cAAc,CAAC,aAAa,gBAAgB,CAAC,QAAS,SAkB3D,EAjBF,IAAM,EAAW,SAAS,cAAc,CAAC,aAAa,KAAK,CAiBzD,EAAQ,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,gBAAkB,CAAC,EAC3D,AAAoB,KAApB,AAjBwB,EAiBf,IAAI,GACf,OAAO,CAAK,CAlBK,EAkBI,CAErB,CAAK,CApBY,EAoBH,CAAG,AApBS,EAoBA,IAAI,GAEhC,aAAa,OAAO,CAAC,aAAc,KAAK,SAAS,CAAC,IAnBhD,EAAQ,WAAW,CAAG,EAAS,IAAI,GAAK,YAAc,cAGtD,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,GAEA,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,QAAS,KAC/D,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EACF,CAAA,EAxFoB,EAAM,EAAE,CAAE,EAC5B,GAEA,EAAU,WAAW,CAAC,GACtB,EAAK,WAAW,CAAC,GAEjB,EAAc,WAAW,CAAC,EAC5B,CAAA,EAgG6C,GAC/C","sources":["<anon>","src/journal.js"],"sourcesContent":["//added DOM\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const favoritesList = document.getElementById(\"favorites-list\");\n    // creating a function that updates the list of known favorites in local storage\n    function getFavorites() {\n        return JSON.parse(localStorage.getItem(\"favorites\")) || []; //added a code\n    //legt einen benannten Eintrag an oder ersetzt\n    }\n    // Create a movie card\n    function createMovieCard(movie) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"bg-gray-800\", \"rounded-lg\", \"shadow-lg\", \"overflow-hidden\", \"relative\", \"flex\", \"flex-col\", \"h-full\", \"m-[20px]\", \"mb-[20px]\");\n        card.setAttribute(\"data-movie-id\", movie.id);\n        const movieImage = document.createElement(\"img\");\n        movieImage.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        movieImage.alt = movie.title;\n        movieImage.classList.add(\"w-full\", \"h-64\", \"object-cover\");\n        card.appendChild(movieImage);\n        const movieInfo = document.createElement(\"div\");\n        movieInfo.classList.add(\"p-4\", \"flex\", \"flex-col\", \"flex-grow\");\n        const movieTitle = document.createElement(\"h3\");\n        movieTitle.textContent = movie.title;\n        movieTitle.classList.add(\"text-lg\", \"font-semibold\", \"mb-2\", \"text-white\");\n        movieInfo.appendChild(movieTitle);\n        const movieRating = document.createElement(\"p\");\n        movieRating.textContent = `Rating: ${movie.vote_average}`;\n        movieRating.classList.add(\"text-gray-400\", \"mb-2\");\n        movieInfo.appendChild(movieRating);\n        // Add favorite button with heart icon\n        const favBtn = document.createElement(\"button\");\n        favBtn.classList.add(\"absolute\", \"top-2\", \"right-2\", \"text-gray-400\", \"hover:text-red-500\", \"transition\");\n        favBtn.innerHTML = `<i class=\"fas fa-heart\"></i>`;\n        if (isFavorite(movie.id)) favBtn.classList.add(\"text-red-500\");\n        favBtn.addEventListener(\"click\", ()=>{\n            toggleFavorite(movie, favBtn);\n        });\n        card.appendChild(favBtn);\n        // Add note button\n        const noteBtn = document.createElement(\"button\");\n        noteBtn.classList.add(\"mt-auto\", \"bg-teal-500\", \"text-white\", \"px-4\", \"py-2\", \"rounded-md\", \"transition\", \"self-start\");\n        const note = getNoteForMovie(movie.id);\n        noteBtn.textContent = note ? \"View Note\" : \"Create Note\";\n        noteBtn.addEventListener(\"click\", ()=>{\n            createNotePopup(movie.id, noteBtn);\n        });\n        movieInfo.appendChild(noteBtn);\n        card.appendChild(movieInfo);\n        favoritesList.appendChild(card);\n    }\n    //note button color changes\n    const CREATE_NOTE_COLOR = \"bg-teal-500\";\n    const VIEW_NOTE_COLOR = \"bg-blue-500\";\n    // Check if a movie is in favorites\n    function isFavorite(movieId) {\n        const favorites = getFavorites();\n        return favorites.some((fav)=>fav.id === movieId);\n    }\n    // Toggle favorite status\n    function toggleFavorite(movie, favBtn) {\n        let favorites = getFavorites();\n        if (isFavorite(movie.id)) {\n            // Remove from favorites\n            favorites = favorites.filter((fav)=>fav.id !== movie.id);\n            favBtn.classList.remove(\"text-red-500\"); // Update the heart color\n            removeMovieCard(movie.id);\n        } else {\n            // Add to favorites\n            favorites.push(movie);\n            favBtn.classList.add(\"text-red-500\"); // Update the heart color\n        }\n        // Update localStorage immediately\n        localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    }\n    // Get note for a movie\n    function getNoteForMovie(movieId) {\n        const notes = JSON.parse(localStorage.getItem(\"movieNotes\")) || {};\n        return notes[movieId];\n    }\n    // Create a note popup\n    function createNotePopup(movieId, noteBtn) {\n        const existingNote = getNoteForMovie(movieId);\n        const notePopup = document.createElement(\"div\");\n        notePopup.classList.add(\"fixed\", \"top-0\", \"left-0\", \"w-full\", \"h-full\", \"bg-gray-800\", \"bg-opacity-50\", \"flex\", \"justify-center\", \"items-center\");\n        notePopup.innerHTML = `\n          <div class=\"bg-gray-900 p-6 rounded-lg w-96\">\n              <h3 class=\"text-white text-xl font-semibold mb-4\">Movie Note</h3>\n              <textarea id=\"note-text\" class=\"w-full h-32 p-2 bg-gray-700 text-white rounded-lg\" placeholder=\"Write a note...\">${existingNote || \"\"}</textarea>\n              <button id=\"save-note\" class=\"mt-4 bg-teal-500 text-white px-4 py-2 rounded-md\">Save Note</button>\n              <button id=\"close-popup\" class=\"mt-2 bg-red-500 text-white px-4 py-2 rounded-md\">Close</button>\n          </div>\n      `;\n        document.body.appendChild(notePopup);\n        document.getElementById(\"save-note\").addEventListener(\"click\", ()=>{\n            const noteText = document.getElementById(\"note-text\").value;\n            saveNoteForMovie(movieId, noteText);\n            // Update the note button immediately based on the note\n            noteBtn.textContent = noteText.trim() ? \"View Note\" : \"Create Note\";\n            // Close the note popup\n            document.body.removeChild(notePopup);\n        });\n        document.getElementById(\"close-popup\").addEventListener(\"click\", ()=>{\n            document.body.removeChild(notePopup);\n        });\n    }\n    // Save a note for a movie\n    function saveNoteForMovie(movieId, noteText) {\n        let notes = JSON.parse(localStorage.getItem(\"movieNotes\")) || {};\n        if (noteText.trim() === \"\") delete notes[movieId]; // Remove the note if it's empty\n        else notes[movieId] = noteText.trim();\n        localStorage.setItem(\"movieNotes\", JSON.stringify(notes));\n    }\n    // Load favorites from localStorage\n    const favorites = getFavorites(); // Aufrufen einer Funktion\n    favorites.forEach((movie)=>createMovieCard(movie));\n});\n//remove movie from the favorites\nfunction removeMovieCard(movieId) {\n    const card = document.querySelector(`[data-movie-id=\"${movieId}\"]`);\n    if (card) card.remove();\n}\n\n//# sourceMappingURL=journal.575903cc.js.map\n","//added DOM\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const favoritesList = document.getElementById(\"favorites-list\");\r\n\r\n  // creating a function that updates the list of known favorites in local storage\r\n  function getFavorites() {\r\n    return JSON.parse(localStorage.getItem(\"favorites\")) || []; //added a code\r\n    //legt einen benannten Eintrag an oder ersetzt\r\n  }\r\n\r\n  // Create a movie card\r\n  function createMovieCard(movie) {\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\r\n      \"bg-gray-800\",\r\n      \"rounded-lg\",\r\n      \"shadow-lg\",\r\n      \"overflow-hidden\",\r\n      \"relative\",\r\n      \"flex\",\r\n      \"flex-col\",\r\n      \"h-full\",\r\n      \"m-[20px]\",\r\n      \"mb-[20px]\"\r\n    );\r\n    card.setAttribute(\"data-movie-id\", movie.id);\r\n\r\n    const movieImage = document.createElement(\"img\");\r\n    movieImage.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n    movieImage.alt = movie.title;\r\n    movieImage.classList.add(\"w-full\", \"h-64\", \"object-cover\");\r\n    card.appendChild(movieImage);\r\n\r\n    const movieInfo = document.createElement(\"div\");\r\n    movieInfo.classList.add(\"p-4\", \"flex\", \"flex-col\", \"flex-grow\");\r\n\r\n    const movieTitle = document.createElement(\"h3\");\r\n    movieTitle.textContent = movie.title;\r\n    movieTitle.classList.add(\"text-lg\", \"font-semibold\", \"mb-2\", \"text-white\");\r\n    movieInfo.appendChild(movieTitle);\r\n\r\n    const movieRating = document.createElement(\"p\");\r\n    movieRating.textContent = `Rating: ${movie.vote_average}`;\r\n    movieRating.classList.add(\"text-gray-400\", \"mb-2\");\r\n    movieInfo.appendChild(movieRating);\r\n\r\n    // Add favorite button with heart icon\r\n    const favBtn = document.createElement(\"button\");\r\n    favBtn.classList.add(\r\n      \"absolute\",\r\n      \"top-2\",\r\n      \"right-2\",\r\n      \"text-gray-400\",\r\n      \"hover:text-red-500\",\r\n      \"transition\"\r\n    );\r\n    favBtn.innerHTML = `<i class=\"fas fa-heart\"></i>`;\r\n    if (isFavorite(movie.id)) {\r\n      favBtn.classList.add(\"text-red-500\");\r\n    }\r\n\r\n    favBtn.addEventListener(\"click\", () => {\r\n      toggleFavorite(movie, favBtn);\r\n    });\r\n\r\n    card.appendChild(favBtn);\r\n\r\n    // Add note button\r\n    const noteBtn = document.createElement(\"button\");\r\n    noteBtn.classList.add(\r\n      \"mt-auto\",\r\n      \"bg-teal-500\",\r\n      \"text-white\",\r\n      \"px-4\",\r\n      \"py-2\",\r\n      \"rounded-md\",\r\n      \"transition\",\r\n      \"self-start\"\r\n    );\r\n    const note = getNoteForMovie(movie.id);\r\n    noteBtn.textContent = note ? \"View Note\" : \"Create Note\";\r\n    noteBtn.addEventListener(\"click\", () => {\r\n      createNotePopup(movie.id, noteBtn);\r\n    });\r\n\r\n    movieInfo.appendChild(noteBtn);\r\n    card.appendChild(movieInfo);\r\n\r\n    favoritesList.appendChild(card);\r\n  }\r\n  //note button color changes\r\n\r\n  const CREATE_NOTE_COLOR = \"bg-teal-500\";\r\n  const VIEW_NOTE_COLOR = \"bg-blue-500\";\r\n\r\n  // Check if a movie is in favorites\r\n  function isFavorite(movieId) {\r\n    const favorites = getFavorites();\r\n    return favorites.some((fav) => fav.id === movieId);\r\n  }\r\n\r\n  // Toggle favorite status\r\n  function toggleFavorite(movie, favBtn) {\r\n    let favorites = getFavorites();\r\n\r\n    if (isFavorite(movie.id)) {\r\n      // Remove from favorites\r\n      favorites = favorites.filter((fav) => fav.id !== movie.id);\r\n      favBtn.classList.remove(\"text-red-500\"); // Update the heart color\r\n      removeMovieCard(movie.id);\r\n    } else {\r\n      // Add to favorites\r\n      favorites.push(movie);\r\n      favBtn.classList.add(\"text-red-500\"); // Update the heart color\r\n    }\r\n\r\n    // Update localStorage immediately\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }\r\n\r\n  // Get note for a movie\r\n  function getNoteForMovie(movieId) {\r\n    const notes = JSON.parse(localStorage.getItem(\"movieNotes\")) || {};\r\n    return notes[movieId];\r\n  }\r\n\r\n  // Create a note popup\r\n  function createNotePopup(movieId, noteBtn) {\r\n    const existingNote = getNoteForMovie(movieId);\r\n\r\n    const notePopup = document.createElement(\"div\");\r\n    notePopup.classList.add(\r\n      \"fixed\",\r\n      \"top-0\",\r\n      \"left-0\",\r\n      \"w-full\",\r\n      \"h-full\",\r\n      \"bg-gray-800\",\r\n      \"bg-opacity-50\",\r\n      \"flex\",\r\n      \"justify-center\",\r\n      \"items-center\"\r\n    );\r\n    notePopup.innerHTML = `\r\n          <div class=\"bg-gray-900 p-6 rounded-lg w-96\">\r\n              <h3 class=\"text-white text-xl font-semibold mb-4\">Movie Note</h3>\r\n              <textarea id=\"note-text\" class=\"w-full h-32 p-2 bg-gray-700 text-white rounded-lg\" placeholder=\"Write a note...\">${\r\n                existingNote || \"\"\r\n              }</textarea>\r\n              <button id=\"save-note\" class=\"mt-4 bg-teal-500 text-white px-4 py-2 rounded-md\">Save Note</button>\r\n              <button id=\"close-popup\" class=\"mt-2 bg-red-500 text-white px-4 py-2 rounded-md\">Close</button>\r\n          </div>\r\n      `;\r\n\r\n    document.body.appendChild(notePopup);\r\n\r\n    document.getElementById(\"save-note\").addEventListener(\"click\", () => {\r\n      const noteText = document.getElementById(\"note-text\").value;\r\n      saveNoteForMovie(movieId, noteText);\r\n\r\n      // Update the note button immediately based on the note\r\n      noteBtn.textContent = noteText.trim() ? \"View Note\" : \"Create Note\";\r\n\r\n      // Close the note popup\r\n      document.body.removeChild(notePopup);\r\n    });\r\n\r\n    document.getElementById(\"close-popup\").addEventListener(\"click\", () => {\r\n      document.body.removeChild(notePopup);\r\n    });\r\n  }\r\n\r\n  // Save a note for a movie\r\n  function saveNoteForMovie(movieId, noteText) {\r\n    let notes = JSON.parse(localStorage.getItem(\"movieNotes\")) || {};\r\n    if (noteText.trim() === \"\") {\r\n      delete notes[movieId]; // Remove the note if it's empty\r\n    } else {\r\n      notes[movieId] = noteText.trim();\r\n    }\r\n    localStorage.setItem(\"movieNotes\", JSON.stringify(notes));\r\n  }\r\n\r\n  // Load favorites from localStorage\r\n  const favorites = getFavorites(); // Aufrufen einer Funktion\r\n  favorites.forEach((movie) => createMovieCard(movie));\r\n});\r\n\r\n//remove movie from the favorites\r\nfunction removeMovieCard(movieId) {\r\n  const card = document.querySelector(`[data-movie-id=\"${movieId}\"]`);\r\n  if (card) {\r\n    card.remove();\r\n  }\r\n}\r\n"],"names":["document","addEventListener","favoritesList","getElementById","getFavorites","JSON","parse","localStorage","getItem","isFavorite","movieId","favorites","some","fav","id","getNoteForMovie","notes","forEach","movie","createMovieCard","card","createElement","classList","add","setAttribute","movieImage","src","poster_path","alt","title","appendChild","movieInfo","movieTitle","textContent","movieRating","vote_average","favBtn","innerHTML","filter","remove","removeMovieCard","querySelector","push","setItem","stringify","noteBtn","note","createNotePopup","existingNote","notePopup","body","noteText","value","trim","removeChild"],"version":3,"file":"journal.575903cc.js.map"}